name: Bug Reproduction - Auto Target Install

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  auto-target-install:
    runs-on: ubuntu-latest
    name: "Method 2: Let cargo-lambda auto-install target (may fail - this is the bug)"

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Show initial rustup state
        run: |
          echo "=== Rustup Initial State (before any setup) ==="
          rustup --version || echo "rustup not found"
          rustup show || echo "rustup show failed"
          rustup toolchain list || echo "rustup toolchain list failed"
          rustup target list --installed || echo "rustup target list failed"
          echo "Default toolchain: $(rustup default)" || echo "no default toolchain"
          echo ""

      - name: Setup Zig
        uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0
          use-cache: false

      - name: Setup Rust (without ARM64 target)
        uses: dtolnay/rust-toolchain@stable

      - name: Show rustup state after Rust setup
        run: |
          echo "=== Rustup State After Rust Setup ==="
          rustup show
          rustup toolchain list
          rustup target list --installed
          echo "Default toolchain: $(rustup default)"
          echo "Active toolchain: $(rustup show active-toolchain)"
          echo ""

      - name: Install cargo-lambda
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-lambda

      - name: Show rustup state after cargo-lambda install
        run: |
          echo "=== Rustup State After cargo-lambda Install ==="
          rustup show
          rustup toolchain list
          rustup target list --installed
          echo "Default toolchain: $(rustup default)"
          echo "Active toolchain: $(rustup show active-toolchain)"
          echo "cargo-lambda location: $(which cargo-lambda)"
          echo ""

      - name: Show initial state
        run: |
          echo "=== Initial State ==="
          echo "Rust targets installed:"
          rustup target list --installed
          echo "Cargo version: $(cargo --version)"
          echo "Zig version: $(zig version)"
          echo "Cargo lambda version: $(cargo lambda --version)"

      - name: Verify no ARM64 target initially
        run: |
          echo "=== Verifying ARM64 target is NOT pre-installed ==="
          if rustup target list --installed | grep -q aarch64-unknown-linux-gnu; then
            echo "❌ ARM64 target is already installed - this won't reproduce the bug"
            exit 1
          else
            echo "✅ ARM64 target not installed - good for reproducing bug"
          fi

      - name: Build and let cargo-lambda auto-install target (may fail)
        run: |
          echo "=== Building and letting cargo-lambda auto-install target ==="
          echo "This should demonstrate the bug where cargo-lambda:"
          echo "1. Detects missing aarch64-unknown-linux-gnu target"
          echo "2. Installs it automatically"
          echo "3. But then fails to use it properly"
          cargo lambda build --release --arm64
        continue-on-error: true

      - name: Check what happened
        run: |
          echo "=== Post-Build Analysis ==="
          echo "Targets after build attempt:"
          rustup target list --installed
          if rustup target list --installed | grep -q aarch64-unknown-linux-gnu; then
            echo "✅ ARM64 target WAS auto-installed by cargo-lambda"
          else
            echo "❌ ARM64 target was NOT installed"
          fi
          echo "Build artifacts:"
          find target -name "bootstrap*" -type f || echo "No bootstrap files found"
